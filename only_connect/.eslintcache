[{"/Users/alexkats/Documents/Only_Connect/only_connect/src/index.js":"1","/Users/alexkats/Documents/Only_Connect/only_connect/src/reportWebVitals.js":"2","/Users/alexkats/Documents/Only_Connect/only_connect/src/App.js":"3","/Users/alexkats/Documents/Only_Connect/only_connect/src/Components/PSRow.js":"4","/Users/alexkats/Documents/Only_Connect/only_connect/src/Components/PSWall.js":"5","/Users/alexkats/Documents/Only_Connect/only_connect/src/Components/MissingVowels.js":"6","/Users/alexkats/Documents/Only_Connect/only_connect/src/Components/WordWall.js":"7","/Users/alexkats/Documents/Only_Connect/only_connect/src/Components/Rectangle.js":"8","/Users/alexkats/Documents/Only_Connect/only_connect/src/Components/WallIcon.js":"9","/Users/alexkats/Documents/Only_Connect/only_connect/src/Components/Game.js":"10","/Users/alexkats/Documents/Only_Connect/only_connect/src/utilities/helpersWordWall.js":"11"},{"size":503,"mtime":1608086169321,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1608086169321,"results":"14","hashOfConfig":"13"},{"size":232,"mtime":1609739041873,"results":"15","hashOfConfig":"13"},{"size":1516,"mtime":1609739041874,"results":"16","hashOfConfig":"13"},{"size":1680,"mtime":1609739041874,"results":"17","hashOfConfig":"13"},{"size":452,"mtime":1608086169316,"results":"18","hashOfConfig":"13"},{"size":7009,"mtime":1609775808471,"results":"19","hashOfConfig":"13"},{"size":2017,"mtime":1609739041874,"results":"20","hashOfConfig":"13"},{"size":391,"mtime":1609739041874,"results":"21","hashOfConfig":"13"},{"size":1268,"mtime":1609739041873,"results":"22","hashOfConfig":"13"},{"size":1945,"mtime":1609739041880,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1fajw7o",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},"/Users/alexkats/Documents/Only_Connect/only_connect/src/index.js",[],["51","52"],"/Users/alexkats/Documents/Only_Connect/only_connect/src/reportWebVitals.js",[],"/Users/alexkats/Documents/Only_Connect/only_connect/src/App.js",[],"/Users/alexkats/Documents/Only_Connect/only_connect/src/Components/PSRow.js",["53"],"import React, { useState, useEffect } from \"react\";\n//import socketIOClient from \"socket.io-client\";\nimport Rectangle from './Rectangle'\n\nfunction PSRow(props)\n{\n    const [count, setCount] = useState(0);\n    const hidden_dictionary = {};\n\n    const handleClick = () =>\n    {\n        setCount(count + 1);\n        if(count == final_number + 1)\n        {\n            props.exitClick();\n        }\n    }\n\n    var final_number = 0;\n    if(props.type === \"sequence\")\n    {\n        final_number = 2;\n    }\n    else\n    {\n        final_number = 3;\n    }\n\n    return (\n        <div className=\"grid grid-cols-4 justify-items-center items-center py-14 lg:py-40 gap-y-10 lg:gap-y-20\">\n                <Rectangle type=\"rectangle\">A</Rectangle>\n                <Rectangle type=\"rectangle\" hidden={count >= 1 ? \"\" : \"hidden\"}>B</Rectangle>\n                <Rectangle type=\"rectangle\" hidden={count >= 2 ? \"\" : \"hidden\"}>C</Rectangle>\n                <Rectangle type=\"rectangle\" hidden={count >= final_number ? \"\" : \"hidden\"}>{props.type === \"sequence\" ? \"?\" : \"D\"}</Rectangle>\n            <div className=\"col-span-full w-full justify-items-center px-4 lg:px-20\">\n                <Rectangle type=\"answer\" hidden={count >= (final_number + 1) ? \"\" : \"hidden\"}>Hello</Rectangle>\n            </div>\n            <div className=\"col-span-4 justify-items-center px-4 lg:px-20 cursor-pointer\">\n                <Rectangle clickBlock={handleClick} type=\"answer\">Next</Rectangle>\n            </div>\n        </div>\n    )\n}\n\nexport default PSRow","/Users/alexkats/Documents/Only_Connect/only_connect/src/Components/PSWall.js",[],"/Users/alexkats/Documents/Only_Connect/only_connect/src/Components/MissingVowels.js",[],"/Users/alexkats/Documents/Only_Connect/only_connect/src/Components/WordWall.js",["54","55","56"],"/Users/alexkats/Documents/Only_Connect/only_connect/src/Components/Rectangle.js",["57","58","59"],"import React, { useCallback, useRef, useEffect, forwardRef } from \"react\";\n\nconst Rectangle = forwardRef(({ ...props }, ref) => {\n    // const myRef = useCallback(node => {\n    //     if(node){\n    //         first = node.getBoundingClientRect()\n    //     }\n    //     console.log(first)\n    // },[props.matched])\n\n    // let myRef = useRef();\n    //console.log(myRef.current)\n    function handleClick() {\n        let obj = {\n            word: props.word,\n            id: props.id,\n            group: props.group,\n            clicked: props.clicked,\n            ref,\n        };\n        props.clickBlock(obj);\n    }\n    var text_size = \"\";\n    var width = \"\";\n    var height = \"\";\n    var color = \"bg-oc-blue\";\n\n    // useEffect(() => {\n    //     console.log(myRef.current.getBoundingClientRect());\n    // },[myRef.current.getBoundingClientRect()])\n\n    //ANSWER\n    if (props.type === \"answer\") {\n        width = \"p-2\";\n        height = \"h-12 lg:h-20\";\n        text_size = \"text-2xl sm:text-4xl lg:text-5xl\";\n    }\n\n    //WALL\n    else if (props.type === \"wall\") {\n        width = \"w-20 sm:w-24 lg:w-52 cursor-pointer\";\n        height = \"h-16 sm:h-20 lg:h-40\";\n        text_size = \"text-1xl lg:text-4xl\";\n        color = props.color;\n    }\n\n    //VOWELS\n    else if (props.type === \"vowels\") {\n        width = \"p-4\";\n        height = \"\";\n        text_size = \"text-3xl sm:text-4xl lg:text-5xl\";\n        color = \"bg-blue-800 text-white\";\n    } else {\n        width = \"w-16 sm:w-36 lg:w-80\";\n        height = \"h-12 sm:h-28 lg:h-64\";\n        text_size = \"text-2xl sm:text-6xl lg:text-8xl\";\n    }\n\n    return (\n        <div\n            ref={ref}\n            onClick={!props.matched && handleClick}\n            className={`${width} ${height} ${color} shadow-2xl rounded-md`}\n        >\n            <h1\n                className={`${text_size} w-full h-full flex justify-center items-center text-center`}\n            >\n                {props.children}\n            </h1>\n        </div>\n    );\n});\n\nexport default Rectangle;\n","/Users/alexkats/Documents/Only_Connect/only_connect/src/Components/WallIcon.js",[],"/Users/alexkats/Documents/Only_Connect/only_connect/src/Components/Game.js",["60","61","62","63","64","65","66","67"],"import React, { useState } from 'react'\nimport PSWall from './PSWall';\nimport WordWall from './WordWall';\nimport PSRow from './PSRow';\nimport MissingVowels from './MissingVowels';\n\nfunction Game({...props})\n{\n    const[gameState, setGameState] = useState(\n        {\n            round: 0,\n            wallIndex: 0,\n            scores:0,\n            clickedRow: false\n        }\n    )\n\n    const connectionWall = [[\"A\", \"B\", \"C\", \"D\",\"Letter\"], [\"E\", \"F\", \"G\", \"H\",\"Letter\"], [\"I\", \"J\", \"K\", \"L\",\"Letter\"], [\"M\", \"N\", \"O\", \"P\",\"Letter\"]];\n\n    const incrementRound = () =>\n    {\n        setGameState({...gameState, round: gameState.round + 1});\n        console.log(gameState.round);\n    }\n\n    const psWallHandle = () =>\n    {\n        setGameState({...gameState, clickedRow: true});\n    }\n\n    const psRowExit = () =>\n    {\n        setGameState({...gameState, wallIndex: gameState.wallIndex + 1, clickedRow: false});\n    }\n\n    var div = null;\n\n    // if(gameState.round < 2)\n    // {\n    //     return(\n    //         <div>{gameState.clickedRow === false ? <PSWall onClick={psWallHandle}></PSWall> : <PSRow exitClick={psRowExit} row={connectionWall[gameState.wallIndex]}></PSRow>}</div>\n    //     )\n    // }\n    return (\n        <WordWall/>\n    )\n}\nexport default Game;","/Users/alexkats/Documents/Only_Connect/only_connect/src/utilities/helpersWordWall.js",["68","69","70"],"export function randomize(arr) {\n    let random = [];\n    let val = 0;\n    while (arr.length) {\n        let index = Math.floor(Math.random() * arr.length);\n        val = arr.splice(index, 1);\n        random.push(...val);\n    }\n    return random;\n}\n\nexport function animate(arr, eltBoundsBefore, color) {\n    const eltBoundsAfter = arr.map((el) => {\n        return el.current.getBoundingClientRect();\n    });\n\n    arr.forEach((item, index) => {\n        const deltaX = eltBoundsBefore[index].left - eltBoundsAfter[index].left;\n        const deltaY = eltBoundsBefore[index].top - eltBoundsAfter[index].top;\n        const deltaW = eltBoundsBefore[index].width / eltBoundsAfter[index].width;\n        const deltaH = eltBoundsBefore[index].height / eltBoundsAfter[index].height;\n\n        item.current.animate(\n            [\n                {\n                    transformOrigin: \"top left\",\n                    transform: `\n                  translate(${deltaX}px, ${deltaY}px)\n                  scale(${deltaW}, ${deltaH})\n                `,\n                },\n                {\n                    transformOrigin: \"top left\",\n                    transform: `\n                translate(${0}px, ${0}px)\n                scale(${deltaW}, ${deltaH})\n              `,\n                },\n            ],\n            {\n                duration: 1000,\n                easing: \"ease-in-out\",\n                fill: \"both\",\n            },\n        );\n    });\n}\n\nexport function checkForMatch(clickedList) {\n    return (\n        clickedList[0].group == clickedList[1].group &&\n        clickedList[0].group == clickedList[2].group &&\n        clickedList[0].group == clickedList[3].group\n    );\n}\n\nexport function clearClickedList(clickedList, solvedList, idToIndex) {\n    for (let block of clickedList) {\n        let foundIndex = idToIndex.get(block.id);\n        solvedList[foundIndex].clicked = false;\n        solvedList[foundIndex].color = \" bg-oc-blue\";\n    }\n}\n",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":10,"nodeType":"77","messageId":"78","endLine":1,"endColumn":21},{"ruleId":"75","severity":1,"message":"79","line":71,"column":13,"nodeType":"77","messageId":"78","endLine":71,"endColumn":18},{"ruleId":"80","severity":1,"message":"81","line":91,"column":23,"nodeType":"82","messageId":"83","endLine":91,"endColumn":25},{"ruleId":"80","severity":1,"message":"81","line":130,"column":71,"nodeType":"82","messageId":"83","endLine":130,"endColumn":73},{"ruleId":"75","severity":1,"message":"84","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":28},{"ruleId":"75","severity":1,"message":"85","line":1,"column":30,"nodeType":"77","messageId":"78","endLine":1,"endColumn":36},{"ruleId":"75","severity":1,"message":"86","line":1,"column":38,"nodeType":"77","messageId":"78","endLine":1,"endColumn":47},{"ruleId":"75","severity":1,"message":"87","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":14},{"ruleId":"75","severity":1,"message":"88","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":13},{"ruleId":"75","severity":1,"message":"89","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":21},{"ruleId":"75","severity":1,"message":"90","line":18,"column":11,"nodeType":"77","messageId":"78","endLine":18,"endColumn":25},{"ruleId":"75","severity":1,"message":"91","line":20,"column":11,"nodeType":"77","messageId":"78","endLine":20,"endColumn":25},{"ruleId":"75","severity":1,"message":"92","line":26,"column":11,"nodeType":"77","messageId":"78","endLine":26,"endColumn":23},{"ruleId":"75","severity":1,"message":"93","line":31,"column":11,"nodeType":"77","messageId":"78","endLine":31,"endColumn":20},{"ruleId":"75","severity":1,"message":"94","line":36,"column":9,"nodeType":"77","messageId":"78","endLine":36,"endColumn":12},{"ruleId":"80","severity":1,"message":"81","line":51,"column":30,"nodeType":"82","messageId":"83","endLine":51,"endColumn":32},{"ruleId":"80","severity":1,"message":"81","line":52,"column":30,"nodeType":"82","messageId":"83","endLine":52,"endColumn":32},{"ruleId":"80","severity":1,"message":"81","line":53,"column":30,"nodeType":"82","messageId":"83","endLine":53,"endColumn":32},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'PreviousMap' is defined but never used.","Identifier","unusedVar","'delay' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useCallback' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'PSWall' is defined but never used.","'PSRow' is defined but never used.","'MissingVowels' is defined but never used.","'connectionWall' is assigned a value but never used.","'incrementRound' is assigned a value but never used.","'psWallHandle' is assigned a value but never used.","'psRowExit' is assigned a value but never used.","'div' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]