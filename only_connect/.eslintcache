[{"S:\\Documents\\Only_Connect\\only_connect\\src\\index.js":"1","S:\\Documents\\Only_Connect\\only_connect\\src\\App.js":"2","S:\\Documents\\Only_Connect\\only_connect\\src\\reportWebVitals.js":"3","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\PSWall.js":"4","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\WallIcon.js":"5","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\Rectangle.js":"6","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\WordWall.js":"7","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\MissingVowels.js":"8","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\Game.js":"9","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\WorldWallIcons.js":"10","S:\\Documents\\Only_Connect\\only_connect\\src\\randomize.js":"11","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\Timer.js":"12","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\ConnectionRow.js":"13","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\SequenceRow.js":"14"},{"size":503,"mtime":1607648843870,"results":"15","hashOfConfig":"16"},{"size":246,"mtime":1608845578639,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":1609,"mtime":1608927006634,"results":"19","hashOfConfig":"16"},{"size":512,"mtime":1608927047466,"results":"20","hashOfConfig":"16"},{"size":1753,"mtime":1608927047464,"results":"21","hashOfConfig":"16"},{"size":4585,"mtime":1608927047466,"results":"22","hashOfConfig":"16"},{"size":465,"mtime":1607656995063,"results":"23","hashOfConfig":"16"},{"size":2694,"mtime":1608927341946,"results":"24","hashOfConfig":"16"},{"size":773,"mtime":1608927006638,"results":"25","hashOfConfig":"16"},{"size":253,"mtime":1608927047467,"results":"26","hashOfConfig":"16"},{"size":1167,"mtime":1608927047465,"results":"27","hashOfConfig":"16"},{"size":2496,"mtime":1608927047463,"results":"28","hashOfConfig":"16"},{"size":2480,"mtime":1608927047465,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1fpppa7",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},"S:\\Documents\\Only_Connect\\only_connect\\src\\index.js",[],["63","64"],"S:\\Documents\\Only_Connect\\only_connect\\src\\App.js",[],"S:\\Documents\\Only_Connect\\only_connect\\src\\reportWebVitals.js",[],"S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\PSWall.js",[],"S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\WallIcon.js",[],"S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\Rectangle.js",[],"S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\WordWall.js",["65","66","67"],"import React, { Component } from \"react\";\r\nimport Rectangle from './Rectangle'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst colorDictionary = {0: \"bg-red-500\", 1: \"bg-blue-500\", 2:\"bg-green-500\", 3:\"bg-yellow-500\"};\r\nconst wordDictionary = [\"Hazelnut\",\"Cube\",\"Coconut\", \"Guam\",\r\n                        \"Mocha\",\"Vanilla\",\"Papua New Guinea\",\"Champagne\",\r\n                        \"Australia\",\"Butter Pecan\",\"Caramel\",\"T\",\r\n                        \"Cook Islands\",\"San Pellegrino\",\"Prince\",\"Fiji\"];\r\n\r\nlet blocks = wordDictionary.map((el,index) => {\r\n    return{\r\n        word: el,\r\n        color: 'bg-oc-blue',\r\n        id: uuidv4(),\r\n        group: index % 4,\r\n        index: index,\r\n        clicked: false\r\n    }\r\n})\r\n\r\nclass WordWall extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            clicked: [],\r\n            color_count: 0,\r\n            solved: blocks\r\n        };\r\n        this.clickBlock = this.clickBlock.bind(this)\r\n    }\r\n\r\n    clickBlock(obj){\r\n        console.log(obj)\r\n        let clickedList = this.state.clicked, solvedList = this.state.solved, count = this.state.color_count\r\n        let lastElement = clickedList[clickedList.length - 1]\r\n        console.log(solvedList)\r\n        if ( !clickedList.length || obj.group === lastElement.group){\r\n            clickedList.push(obj)\r\n            solvedList[obj.index].clicked = true\r\n            solvedList[obj.index].color = colorDictionary[count]\r\n            if( clickedList.length === 4){\r\n                count++;\r\n                clickedList = [];   \r\n            }\r\n\r\n            this.setState({solved:solvedList,clicked:clickedList,color_count:count})\r\n        }\r\n        else{\r\n            for(let block of clickedList){\r\n                //console.log(block)\r\n                solvedList[block.index].clicked = false\r\n                solvedList[block.index].color = 'bg-oc-blue'\r\n            }\r\n            clickedList = []\r\n            setTimeout(() => {this.setState({solved:solvedList,clicked:clickedList,color_count:count})}, 250);\r\n        }\r\n        \r\n    }\r\n    buildBoard(){\r\n        return this.state.solved.map((block) => (\r\n            <Rectangle type=\"wall\" {...block} clickBlock={this.clickBlock}>{block.word}</Rectangle>\r\n        )) \r\n    }\r\n\r\n    render(){\r\n       return (\r\n            <div className=\"grid grid-flow-col grid-rows-4 lg:py-20 gap-y-1 gap-x-1 lg:gap-y-6 lg:gap-x-6 justify-center items-center\">\r\n                {this.buildBoard()}\r\n            </div>  \r\n        );\r\n    }\r\n}\r\n\r\nexport default WordWall;","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\MissingVowels.js",[],"S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\Game.js",["68"],"S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\WorldWallIcons.js",[],"S:\\Documents\\Only_Connect\\only_connect\\src\\randomize.js",[],"S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\Timer.js",["69"],"import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Timer(props)\r\n{\r\n    const [completed, setCompleted] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() =>\r\n        {\r\n            setCompleted(oldVal => {\r\n                const newVal = oldVal + 1;\r\n                if(newVal === 40 || props.hidden)\r\n                {\r\n                    clearInterval(interval)\r\n                }\r\n                return newVal;\r\n            });\r\n        }, 1000);\r\n        return function cleanup() {\r\n            clearInterval(interval);\r\n        }\r\n      }, [props.hidden]);\r\n\r\n    const width = \"w-16 sm:w-36 lg:w-80\";\r\n    const height = \"h-12 lg:h-20\";\r\n    const text_size = \"text-2xl sm:text-4xl lg:text-5xl\";\r\n    const bg_color = \"bg-oc-blue\";\r\n    const fill_color = \"bg-blue-700\";\r\n\r\n    const fill_width = `w-${completed}/40`;\r\n\r\n    \r\n\r\n  return (\r\n    <div className={`${width} ${height} ${bg_color} shadow-2xl rounded-md ${props.hidden ? \"invisible\" : \"\"}`}>\r\n        <div className={`${fill_width} ${height} ${fill_color} shadow-2xl rounded-md ease-in${props.hidden}`}></div>\r\n    </div>\r\n    )\r\n}\r\nexport default Timer","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\ConnectionRow.js",["70","71"],"import React, { useState, useEffect } from \"react\";\r\n//import socketIOClient from \"socket.io-client\";\r\nimport Rectangle from './Rectangle';\r\nimport Timer from './Timer';\r\n\r\nfunction ConnectionRow(props)\r\n{\r\n    const [count, setCount] = useState(1);\r\n    const [timerIndex, setTimerIndex] = useState(1);\r\n    const [hidden, setHidden] = useState(\r\n        {\r\n            1:true,\r\n            2:true,\r\n            3:true,\r\n            4:true,\r\n            5:false\r\n        }\r\n    )\r\n\r\n    var final_number = 4;\r\n\r\n    const handleClick = (i) =>\r\n    {\r\n        setCount(count + 1);\r\n        console.log(count, final_number);\r\n        \r\n        if(count < final_number)\r\n        {\r\n            setTimerIndex(timerIndex + 1);\r\n            var temp = {...hidden}\r\n            temp[count] = false;\r\n            setHidden(temp);\r\n        }\r\n        else\r\n        {\r\n            var temp = {...hidden}\r\n            temp[4] = false;\r\n            temp[5] = true;\r\n            setHidden(temp);\r\n            setTimerIndex(1);\r\n        }\r\n\r\n        if(count === final_number + 1)\r\n        {\r\n            props.exitClick(i);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"grid justify-items-center items-center py-2 sm:py-6 lg:py-24 gap-y-10 lg:gap-y-12\">\r\n\r\n            <div className={`justify-items-center items-center row-start-1 col-start-${timerIndex} px-36`}>\r\n                <Timer completed={0} hidden={hidden[5]}></Timer>\r\n            </div>\r\n\r\n            <div className=\"row-start-2 grid-cols-4 col-span-4\">\r\n                <div className=\"grid grid-cols-4 justify-items-center items-center gap-x-20\">\r\n                    <Rectangle type=\"rectangle\">{props.row[0]}</Rectangle>\r\n                    <Rectangle type=\"rectangle\" hidden={hidden[1]}>{props.row[1]}</Rectangle>\r\n                    <Rectangle type=\"rectangle\" hidden={hidden[2]}>{props.row[2]}</Rectangle>\r\n                    <Rectangle type=\"rectangle\" hidden={hidden[3]}>{props.row[3]}</Rectangle>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row-start-3 col-span-4 w-full justify-items-center mx-20 lg:px-20\">\r\n                <Rectangle type=\"answer\" hidden={hidden[4]}>{props.row[4]}</Rectangle>\r\n            </div>\r\n\r\n            <div className=\"row-start-4 col-span-4 justify-items-center px-4 lg:px-20 cursor-pointer\">\r\n                <Rectangle clickBlock={handleClick} type=\"answer\">Next</Rectangle>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConnectionRow","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\SequenceRow.js",["72","73"],"import React, { useState, useEffect } from \"react\";\r\n//import socketIOClient from \"socket.io-client\";\r\nimport Rectangle from './Rectangle';\r\nimport Timer from './Timer';\r\n\r\nfunction SequenceRow(props)\r\n{\r\n    const [count, setCount] = useState(1);\r\n    const [timerIndex, setTimerIndex] = useState(1);\r\n    const [hidden, setHidden] = useState(\r\n        {\r\n            1:true,\r\n            2:true,\r\n            3:true,\r\n            4:false,\r\n        }\r\n    )\r\n\r\n    var final_number = 3;\r\n\r\n    const handleClick = (i) =>\r\n    {\r\n        setCount(count + 1);\r\n        console.log(count);\r\n\r\n        if(count < final_number)\r\n        {\r\n            setTimerIndex(timerIndex + 1);\r\n            var temp = {...hidden}\r\n            temp[count] = false;\r\n            setHidden(temp);\r\n        }\r\n        else\r\n        {\r\n            var temp = {...hidden}\r\n            temp[3] = false;\r\n            temp[4] = true;\r\n            setHidden(temp);\r\n            setTimerIndex(1);\r\n        }\r\n\r\n        if(count === final_number + 1)\r\n        {\r\n            props.exitClick(i);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"grid justify-items-center items-center py-2 sm:py-6 lg:py-24 gap-y-10 lg:gap-y-12\">\r\n\r\n            <div className={`justify-items-center items-center row-start-1 col-start-${timerIndex} px-36`}>\r\n                <Timer completed={0} hidden={hidden[4]}></Timer>\r\n            </div>\r\n\r\n            <div className=\"row-start-2 grid-cols-4 col-span-4\">\r\n                <div className=\"grid grid-cols-4 justify-items-center items-center gap-x-20\">\r\n                    <Rectangle type=\"rectangle\">{props.row[0]}</Rectangle>\r\n                    <Rectangle type=\"rectangle\" hidden={hidden[1]}>{props.row[1]}</Rectangle>\r\n                    <Rectangle type=\"rectangle\" hidden={hidden[2]}>{props.row[2]}</Rectangle>\r\n                    <Rectangle type=\"rectangle\" hidden={hidden[2]}>{ count > final_number ? props.row[3] : \"?\"}</Rectangle>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row-start-3 col-span-4 w-full justify-items-center mx-20 lg:px-20\">\r\n                <Rectangle type=\"answer\" hidden={hidden[3]}>{props.row[4]}</Rectangle>\r\n            </div>\r\n\r\n            <div className=\"row-start-4 col-span-4 justify-items-center px-4 lg:px-20 cursor-pointer\">\r\n                <Rectangle clickBlock={handleClick} type=\"answer\">Next</Rectangle>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SequenceRow",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":53,"column":45,"nodeType":"80","messageId":"81","endLine":53,"endColumn":47},{"ruleId":"78","severity":1,"message":"79","line":53,"column":69,"nodeType":"80","messageId":"81","endLine":53,"endColumn":71},{"ruleId":"78","severity":1,"message":"79","line":53,"column":93,"nodeType":"80","messageId":"81","endLine":53,"endColumn":95},{"ruleId":"82","severity":1,"message":"83","line":6,"column":8,"nodeType":"84","messageId":"85","endLine":6,"endColumn":21},{"ruleId":"82","severity":1,"message":"86","line":26,"column":11,"nodeType":"84","messageId":"85","endLine":26,"endColumn":20},{"ruleId":"82","severity":1,"message":"87","line":1,"column":27,"nodeType":"84","messageId":"85","endLine":1,"endColumn":36},{"ruleId":"88","severity":1,"message":"89","line":36,"column":17,"nodeType":"84","messageId":"90","endLine":36,"endColumn":21},{"ruleId":"82","severity":1,"message":"87","line":1,"column":27,"nodeType":"84","messageId":"85","endLine":1,"endColumn":36},{"ruleId":"88","severity":1,"message":"89","line":35,"column":17,"nodeType":"84","messageId":"90","endLine":35,"endColumn":21},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'MissingVowels' is defined but never used.","Identifier","unusedVar","'text_size' is assigned a value but never used.","'useEffect' is defined but never used.","no-redeclare","'temp' is already defined.","redeclared","no-global-assign","no-unsafe-negation"]