[{"S:\\Documents\\Only_Connect\\only_connect\\src\\index.js":"1","S:\\Documents\\Only_Connect\\only_connect\\src\\App.js":"2","S:\\Documents\\Only_Connect\\only_connect\\src\\reportWebVitals.js":"3","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\PSWall.js":"4","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\WallIcon.js":"5","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\PSRow.js":"6","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\Rectangle.js":"7","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\WordWall.js":"8","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\MissingVowels.js":"9","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\Game.js":"10","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\WorldWallIcons.js":"11","S:\\Documents\\Only_Connect\\only_connect\\src\\randomize.js":"12"},{"size":503,"mtime":1607648843870,"results":"13","hashOfConfig":"14"},{"size":246,"mtime":1608845578639,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":1609,"mtime":1608905256302,"results":"17","hashOfConfig":"14"},{"size":533,"mtime":1608905256304,"results":"18","hashOfConfig":"14"},{"size":1637,"mtime":1608905256302,"results":"19","hashOfConfig":"14"},{"size":1487,"mtime":1608905287962,"results":"20","hashOfConfig":"14"},{"size":3618,"mtime":1608905287963,"results":"21","hashOfConfig":"14"},{"size":465,"mtime":1607656995063,"results":"22","hashOfConfig":"14"},{"size":2344,"mtime":1608905321681,"results":"23","hashOfConfig":"14"},{"size":773,"mtime":1608905256306,"results":"24","hashOfConfig":"14"},{"size":253,"mtime":1608905287965,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1fpppa7",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"S:\\Documents\\Only_Connect\\only_connect\\src\\index.js",[],["52","53"],"S:\\Documents\\Only_Connect\\only_connect\\src\\App.js",[],"S:\\Documents\\Only_Connect\\only_connect\\src\\reportWebVitals.js",[],"S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\PSWall.js",[],"S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\WallIcon.js",[],"S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\PSRow.js",[],"S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\Rectangle.js",[],"S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\WordWall.js",["54","55","56","57","58"],"import React, { Component } from \"react\";\r\nimport Rectangle from './Rectangle'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst colorDictionary = {0: \"bg-red-500\", 1: \"bg-blue-500\", 2:\"bg-green-500\", 3:\"bg-yellow-500\"};\r\nconst wordDictionary = [\"Hazelnut\",\"Cube\",\"Coconut\", \"Guam\",\r\n                        \"Mocha\",\"Vanilla\",\"Papua New Guinea\",\"Champagne\",\r\n                        \"Australia\",\"Butter Pecan\",\"Caramel\",\"T\",\r\n                        \"Cook Islands\",\"San Pellegrino\",\"Prince\",\"Fiji\"];\r\n\r\nlet blocks = wordDictionary.map((el,index) => {\r\n    return{\r\n        word: el,\r\n        color: 'bg-oc-blue',\r\n        id: uuidv4(),\r\n        group: index % 4,\r\n        index: index,\r\n        clicked: false\r\n    }\r\n})\r\n\r\nclass WordWall extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            clicked: [],\r\n            color_count: 0,\r\n            solved: blocks\r\n        };\r\n        this.clickBlock = this.clickBlock.bind(this)\r\n    }\r\n\r\n    clickBlock(obj){\r\n        console.log(obj)\r\n        let clickedList = this.state.clicked, solvedList = this.state.solved, count = this.state.color_count\r\n        let lastElement = clickedList[clickedList.length - 1]\r\n        console.log(solvedList)\r\n        if ( !clickedList.length || obj.group === lastElement.group){\r\n            clickedList.push(obj)\r\n            solvedList[obj.index].clicked = true\r\n            solvedList[obj.index].color = colorDictionary[count]\r\n            if( clickedList.length === 4){\r\n                count++;\r\n                clickedList = [];   \r\n            }\r\n\r\n            this.setState({solved:solvedList,clicked:clickedList,color_count:count})\r\n        }\r\n        else{\r\n            for(let block of clickedList){\r\n                //console.log(block)\r\n                solvedList[block.index].clicked = false\r\n                solvedList[block.index].color = 'bg-oc-blue'\r\n            }\r\n            clickedList = []\r\n            setTimeout(() => {this.setState({solved:solvedList,clicked:clickedList,color_count:count})}, 250);\r\n        }\r\n        \r\n    }\r\n    buildBoard(){\r\n        return this.state.solved.map((block) => (\r\n            <Rectangle type=\"wall\" {...block} clickBlock={this.clickBlock}>{block.word}</Rectangle>\r\n        )) \r\n    }\r\n\r\n    render(){\r\n       return (\r\n            <div className=\"grid grid-flow-col grid-rows-4 lg:py-20 gap-y-1 gap-x-1 lg:gap-y-6 lg:gap-x-6 justify-center items-center\">\r\n                {this.buildBoard()}\r\n            </div>  \r\n        );\r\n    }\r\n}\r\n\r\nexport default WordWall;","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\MissingVowels.js",[],"S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\Game.js",["59"],"S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\WorldWallIcons.js",[],"S:\\Documents\\Only_Connect\\only_connect\\src\\randomize.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":4,"column":8,"nodeType":"66","messageId":"67","endLine":4,"endColumn":17},{"ruleId":"68","severity":1,"message":"69","line":11,"column":41,"nodeType":"70","messageId":"71","endLine":11,"endColumn":43},{"ruleId":"72","severity":1,"message":"73","line":71,"column":45,"nodeType":"74","messageId":"75","endLine":71,"endColumn":47},{"ruleId":"72","severity":1,"message":"73","line":71,"column":69,"nodeType":"74","messageId":"75","endLine":71,"endColumn":71},{"ruleId":"72","severity":1,"message":"73","line":71,"column":93,"nodeType":"74","messageId":"75","endLine":71,"endColumn":95},{"ruleId":"64","severity":1,"message":"76","line":5,"column":8,"nodeType":"66","messageId":"67","endLine":5,"endColumn":21},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'randomize' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'MissingVowels' is defined but never used.","no-global-assign","no-unsafe-negation"]