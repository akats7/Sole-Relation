[{"S:\\Documents\\Only_Connect\\only_connect\\src\\index.js":"1","S:\\Documents\\Only_Connect\\only_connect\\src\\App.js":"2","S:\\Documents\\Only_Connect\\only_connect\\src\\reportWebVitals.js":"3","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\PSWall.js":"4","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\WallIcon.js":"5","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\PSRow.js":"6","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\Rectangle.js":"7","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\WordWall.js":"8","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\MissingVowels.js":"9","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\Game.js":"10","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\WorldWallIcons.js":"11"},{"size":503,"mtime":1607648843870,"results":"12","hashOfConfig":"13"},{"size":246,"mtime":1608845578639,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":1609,"mtime":1608905256302,"results":"16","hashOfConfig":"13"},{"size":533,"mtime":1608905256304,"results":"17","hashOfConfig":"13"},{"size":1637,"mtime":1608905256302,"results":"18","hashOfConfig":"13"},{"size":1555,"mtime":1608905256303,"results":"19","hashOfConfig":"13"},{"size":2546,"mtime":1608905256304,"results":"20","hashOfConfig":"13"},{"size":465,"mtime":1607656995063,"results":"21","hashOfConfig":"13"},{"size":2344,"mtime":1608905256301,"results":"22","hashOfConfig":"13"},{"size":773,"mtime":1608905256306,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1fpppa7",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"S:\\Documents\\Only_Connect\\only_connect\\src\\index.js",[],["49","50"],"S:\\Documents\\Only_Connect\\only_connect\\src\\App.js",[],"S:\\Documents\\Only_Connect\\only_connect\\src\\reportWebVitals.js",[],"S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\PSWall.js",[],"S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\WallIcon.js",[],"S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\PSRow.js",[],"S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\Rectangle.js",[],"S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\WordWall.js",["51","52","53","54","55"],"import React, { Component } from \"react\";\r\nimport Rectangle from './Rectangle'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst colorDictionary = {0: \"bg-red-500\", 1: \"bg-blue-500\", 2:\"bg-green-500\", 3:\"bg-yellow-500\"};\r\nconst wordDictionary = [\"Hazelnut\",\"Cube\",\"Coconut\", \"Guam\",\r\n                        \"Mocha\",\"Vanilla\",\"Papua New Guinea\",\"Champagne\",\r\n                        \"Australia\",\"Butter Pecan\",\"Caramel\",\"T\",\r\n                        \"Cook Islands\",\"San Pellegrino\",\"Prince\",\"Fiji\"];\r\n\r\nlet blocks = wordDictionary.map((el,index) => {\r\n    return{\r\n        word: el,\r\n        color: 'bg-oc-blue',\r\n        id: uuidv4(),\r\n        group: index % 4,\r\n        index: index,\r\n        clicked: false\r\n    }\r\n})\r\n\r\nclass WordWall extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            clicked: [],\r\n            color_count: 0,\r\n            solved: blocks\r\n        };\r\n        this.clickBlock = this.clickBlock.bind(this)\r\n    }\r\n\r\n    clickBlock(obj){\r\n        console.log(obj)\r\n        let clickedList = this.state.clicked, solvedList = this.state.solved, count = this.state.color_count\r\n        let lastElement = clickedList[clickedList.length - 1]\r\n        console.log(solvedList)\r\n        if ( !clickedList.length || obj.group === lastElement.group){\r\n            clickedList.push(obj)\r\n            solvedList[obj.index].clicked = true\r\n            solvedList[obj.index].color = colorDictionary[count]\r\n            if( clickedList.length === 4){\r\n                count++;\r\n                clickedList = [];   \r\n            }\r\n\r\n            this.setState({solved:solvedList,clicked:clickedList,color_count:count})\r\n        }\r\n        else{\r\n            for(let block of clickedList){\r\n                //console.log(block)\r\n                solvedList[block.index].clicked = false\r\n                solvedList[block.index].color = 'bg-oc-blue'\r\n            }\r\n            clickedList = []\r\n            setTimeout(() => {this.setState({solved:solvedList,clicked:clickedList,color_count:count})}, 250);\r\n        }\r\n        \r\n    }\r\n    buildBoard(){\r\n        return this.state.solved.map((block) => (\r\n            <Rectangle type=\"wall\" {...block} clickBlock={this.clickBlock}>{block.word}</Rectangle>\r\n        )) \r\n    }\r\n\r\n    render(){\r\n       return (\r\n            <div className=\"grid grid-flow-col grid-rows-4 lg:py-20 gap-y-1 gap-x-1 lg:gap-y-6 lg:gap-x-6 justify-center items-center\">\r\n                {this.buildBoard()}\r\n            </div>  \r\n        );\r\n    }\r\n}\r\n\r\nexport default WordWall;","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\MissingVowels.js",[],"S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\Game.js",["56"],"import React, { useState } from 'react'\r\nimport PSWall from './PSWall';\r\nimport WordWall from './WordWall';\r\nimport PSRow from './PSRow';\r\nimport MissingVowels from './MissingVowels';\r\nimport WordWallIcons from './WorldWallIcons';\r\n\r\nfunction Game({...props})\r\n{\r\n    const[gameState, setGameState] = useState(\r\n        {\r\n            round: 0,\r\n            wallIndex: 0,\r\n            scores:0,\r\n            clickedRow: false,\r\n            hidden: {1: false, 2:false, 3:false, 4:false, 5:false, 6:false}\r\n        }\r\n    )\r\n\r\n    const connectionWall = [[\"A\", \"B\", \"C\", \"D\",\"Letter\"], [\"E\", \"F\", \"G\", \"H\",\"Letter\"], [\"I\", \"J\", \"K\", \"L\",\"Letter\"], [\"M\", \"N\", \"O\", \"P\",\"Letter\"], [\"Q\", \"R\", \"S\", \"T\",\"Letter\"], [\"U\", \"V\", \"W\", \"X\",\"Letter\"]];\r\n    const sequenceWall = [[\"1\", \"2\", \"3\", \"4\",\"Numbers\"], [\"5\", \"6\", \"7\", \"8\",\"Numbers\"], [\"9\", \"10\", \"11\", \"12\",\"Numbers\"], [\"13\", \"14\", \"15\", \"16\",\"Numbers\"], [\"17\", \"18\", \"19\", \"20\",\"Numbers\"], [\"21\", \"22\", \"23\", \"24\",\"Numbers\"]];\r\n\r\n    const psWallHandle = (i) =>\r\n    {\r\n        console.log(`Coming back from ${i}`);\r\n        var temp = {...gameState.hidden};\r\n        temp[i] = true;\r\n\r\n        setGameState({...gameState, clickedRow: true, hidden: temp});\r\n    }\r\n\r\n    const psRowExit = () =>\r\n    {\r\n        if(gameState.wallIndex === 5)\r\n        {\r\n            setGameState({...gameState, wallIndex: 0, clickedRow: false, round: gameState.round + 1, hidden:{1: false, 2:false, 3:false, 4:false, 5:false, 6:false}});\r\n            console.log(\"End of Round 1, going to Round 2\");\r\n        }\r\n        else\r\n        {\r\n            setGameState({...gameState, wallIndex: gameState.wallIndex + 1, clickedRow: false});\r\n        }\r\n        \r\n    }\r\n\r\n    var div = null;\r\n\r\n    if(gameState.round < 2)\r\n    {\r\n        return(\r\n            <div>{gameState.clickedRow === false ? <PSWall onClick={psWallHandle} hidden={gameState.hidden}></PSWall> : <PSRow exitClick={psRowExit} type={gameState.round === 0 ? \"\" : \"sequence\"} row={gameState.round === 0 ? connectionWall[gameState.wallIndex] : sequenceWall[gameState.wallIndex]}></PSRow>}</div>\r\n        )\r\n    }\r\n    else\r\n    {\r\n        return(\r\n            <div>{gameState.clickedRow === false ? <WordWallIcons onClick={psWallHandle} hidden={gameState.hidden}></WordWallIcons> : <WordWall> </WordWall>}</div>\r\n        )\r\n    }\r\n}\r\nexport default Game;","S:\\Documents\\Only_Connect\\only_connect\\src\\Components\\WorldWallIcons.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":4,"column":8,"nodeType":"63","messageId":"64","endLine":4,"endColumn":17},{"ruleId":"65","severity":1,"message":"66","line":11,"column":41,"nodeType":"67","messageId":"68","endLine":11,"endColumn":43},{"ruleId":"69","severity":1,"message":"70","line":71,"column":45,"nodeType":"71","messageId":"72","endLine":71,"endColumn":47},{"ruleId":"69","severity":1,"message":"70","line":71,"column":69,"nodeType":"71","messageId":"72","endLine":71,"endColumn":71},{"ruleId":"69","severity":1,"message":"70","line":71,"column":93,"nodeType":"71","messageId":"72","endLine":71,"endColumn":95},{"ruleId":"61","severity":1,"message":"73","line":5,"column":8,"nodeType":"63","messageId":"64","endLine":5,"endColumn":21},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'randomize' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'MissingVowels' is defined but never used.","no-global-assign","no-unsafe-negation"]